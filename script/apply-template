#!/bin/sh
#/ script/apply-template updates the files in this repo based on the repository name.
#/ This should only be run once, and it should be run by the apply-template GitHub Workflow.
#/ It will be deleted after running.

set -e

CDPATH="" cd -- "$(dirname -- "$0")/.."

nwo="$GITHUB_REPOSITORY"
if [ -z "$nwo" ]; then
  nwo=$(git remote get-url origin)
  nwo=${nwo#"git@github.com:"}
  nwo=${nwo#"https://github.com/"}
  nwo=${nwo%".git"}
fi

sedi() {
  if [ "Darwin" = "$(uname)" ]; then
    sed -i '' "$1" "$2"
  else
    sed -i "$1" "$2"
  fi
}

reponame=$(echo "$nwo" | cut -d "/" -f2)
downcased_reponame="$(echo "$reponame" | tr '[:upper:]' '[:lower:]')"
template_modulename="github.com/willabides/goproject-tmpl"
modulename="$(echo "github.com/$nwo" | tr '[:upper:]' '[:lower:]')"
template_pkgname="goprojecttmpl"
pkgname="$(echo "$reponame" | tr '[:upper:]' '[:lower:]' | sed 's/-//g')"

mkdir -p cmd/"$reponame"
for f in $(git ls-files); do
  sedi "s|WillAbides/goproject-tmpl|$nwo|g" "$f"
  sedi "s|goproject-tmpl|$reponame|g" "$f"
  sedi "s|$template_modulename|$modulename|g" "$f"
  sedi "s|$template_pkgname|$pkgname|g" "$f"
  new_name="$(echo "$f" | sed "s|goproject-tmpl|$downcased_reponame|g")"
  if [ "$f" != "$new_name" ]; then
    mv "$f" "$new_name"
  fi
done

rm -f script/new-from-template script/apply-template .github/workflows/apply-template.yaml

script/generate
